1) single-variant. break each chromosome into equally-sized segments.
2) aggregate tests. select subsets of aggregate blocks.
3) sliding window. break chromosome into chunks, with some overlap.

combine at end: for sliding window, need to remove overlaps.

can we combine all these into a single system with slight variation?
blocks for sliding window could also be used for single-variant, with removal of overlap.
use same blocks for aggregate test - a unit is assigned to the block if its first variant lies in that block.

terminology: segment

at start of assoc job:
find overlaps between requested variants and segments
(filter variants here or later separately for each segment?
pro: might avoid empty segments, consolidate filter code
con: filtering is different for different types of analyses
     segment file contains only start and stop, would have to save
     variant list somehow

currently send sge_task_id to job as "chromosome", need to switch to
"index". sometimes it's chromosome (LD pruning, PCA correlation),
sometimes's it's segment.
Or: runRscript is told whether the task_id is chromosome or segment.
Then we don't have to change arguments in assoc scripts. Chromosome is
still needed for things like reading the right files.

OLGApipeline does array jobs by segment within chromosome.
